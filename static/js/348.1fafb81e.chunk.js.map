{"version":3,"file":"static/js/348.1fafb81e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormUser = styled.form`\n  border: 2px solid black;\n  width: 220px;\n  margin-left: 20px;\n  padding: 10px;\n`;\n\nexport const LabelForm = styled.label`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const InputUser = styled.input`\n  display: block;\n`;\n","import React from 'react';\nimport { FormUser, LabelForm, InputUser } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { addContact, } from 'components/redux/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  getConactFromState } from 'components/redux/contactSlice';\n\nexport const ContactForm = () => {\n  const [isName, setName] = useState('');\n  const [isNumber, setNumber] = useState('');\n const contacts = useSelector(getConactFromState);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const submitForm = evt => {\n    evt.preventDefault();\n     if (contacts.contactsUser.find(cont=>cont.name.toLowerCase() ===isName.toLowerCase()))\n   {alert('Contact exist in the list');return;} \n\n     dispatch(addContact( \n      {\n      name: isName,\n      number: isNumber,\n    }\n    ));\n    resetForm();\n  };\n  return (\n    <FormUser onSubmit={submitForm}>\n      <LabelForm>\n        Name\n        <InputUser\n          type=\"text\"\n          value={isName}\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={onChange}\n          required\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        />\n      </LabelForm>\n      <LabelForm>\n        Number\n        <InputUser\n          type=\"tel\"\n          name=\"number\"\n          value={isNumber}\n          onChange={onChange}\n          placeholder=\"Phone number\"\n          required\n        />\n      </LabelForm>\n      <button type=\"submit\">Add contact</button>\n    </FormUser>\n  );\n};\n","import styled from 'styled-components';\n\nconst ContactListStyle = styled.ul`\n  padding-left: 50px;\n  width: 400px;\n`;\n\nconst BtnDelCont = styled.button`\n  margin-right: 5px;\n`;\n\nconst ItemContLst = styled.li`\n  font-style: italic;\n  padding-top: 10px;\n`;\n\nexport { ContactListStyle, BtnDelCont, ItemContLst };\n","import {\n  ContactListStyle,\n  BtnDelCont,\n   ItemContLst,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteContact } from 'components/redux/api';\nimport {getConactFromState} from 'components/redux/contactSlice'\nimport { getFilter } from 'components/redux/filterSlice';\n\nexport const ContactList = () => {\nconst {contactsUser, isLoading, error } = useSelector(getConactFromState);\n//  console.log('contactsUser contlist', contactsUser)\nconst filterCont  = useSelector(getFilter);\n\nconst getFilterContacts = ()=>{\n\n   if (!filterCont.filter) {\n    console.log('contactsUser', contactsUser)\n    return contactsUser;\n    }\n    console.log('contactsUser.filter  ', contactsUser.filter(contact=>contact.name.toUpperCase().includes(filterCont.filter.toUpperCase())))\n return contactsUser.filter(contact=>contact.name.toUpperCase().includes(filterCont.filter.toUpperCase())\n )\n}\n\nconst dispatch = useDispatch();\n  const onRemoveContact =(id)=>{\n    dispatch(deleteContact(id))\n  }\n\n   return (\n    <>\n    {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n    <ContactListStyle>\n       {getFilterContacts().map(el => {\n        return (\n          <ItemContLst key={el.id}>\n            <BtnDelCont type=\"button\" onClick={() => onRemoveContact(el.id)}>\n              del\n            </BtnDelCont>\n            {el.name} : {el.number}\n          </ItemContLst>\n        );\n      })}\n    </ContactListStyle>\n   </> \n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"labelFltr\":\"Filter_labelFltr__Q1BTR\",\"inpfiltr\":\"Filter_inpfiltr__qWoAy\"};","import css from 'components/Filter/Filter.module.css';\n\nexport const Filter = ({ handleFilter, filter }) => {\n  const onChange = event => {\n    handleFilter(event);\n  };\n  return (\n    <label className={css.labelFltr}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        //value={filter}\n        className={css.inpfiltr}\n        onChange={onChange}\n        placeholder=\"Filter by name\"\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { useDispatch} from 'react-redux';\n//import { ContactForm  } from './ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'components/redux/api';\nimport { Filter } from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { setFilter } from 'components/redux/filterSlice';\n\n  export default function ConactsPage() {  \n    const dispatch=useDispatch();\n    const handelInputChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n    };\n  \n  // Завантажуємо контакти\n   useEffect(()=>{ dispatch(fetchContacts())},[dispatch]);\n    return (\n      <>\n        <h1 style={{ marginLeft: '20px' }}>Phonebook</h1>\n        <ContactForm />\n   \n        <h2 style={{ marginLeft: '20px' }}>Contacts</h2>\n        <Filter\n          style={{ marginLeft: '20px' }}\n        handleFilter={handelInputChangeFilter}\n          \n        />\n             \n        <ContactList\n         \n        />\n      </>\n    );\n};\n"],"names":["FormUser","styled","LabelForm","InputUser","ContactForm","useState","isName","setName","isNumber","setNumber","contacts","useSelector","getConactFromState","dispatch","useDispatch","onChange","e","currentTarget","name","value","onSubmit","evt","preventDefault","contactsUser","find","cont","toLowerCase","alert","addContact","number","type","placeholder","required","pattern","ContactListStyle","BtnDelCont","ItemContLst","ContactList","isLoading","error","filterCont","getFilter","filter","console","log","contact","toUpperCase","includes","map","el","onClick","id","deleteContact","Filter","handleFilter","className","css","event","ConactsPage","useEffect","fetchContacts","style","marginLeft","setFilter"],"sourceRoot":""}